ruleset:

  reopen:
    name: "Allow issue/PR creator to reopen invalid issues"
    events: [ issue_comment ]
    when:
      - comment.user.login in [issue.user.login, pull_request.user.login]
      - comment.body contains '/fixed'
      - filter(labels, "name") has "invalid"
    label: -invalid
    reopen: true
  
  remove_invalid_label:
  
    name: "Remove `invalid` label when issues/PRs are reopened"
    events: [ issues, pull_request ]
    label: -invalid
    when: action = "reopened"
    
  add_bug_label:
  
    name: "Label issues as bug when checked in GitHub template"
    events: issues
    label: bug
    when:
      - action = "opened"
      - body matches "/[\s*x\s*] Bug/"

  welcome_me:
  
    name: "Introduce me when I open a pull request"
    events: [ pull_request ]
    when:
      - action = "opened"
      - user.login = "marktopper"
    comment: |
      Hey @{{ user.login }}! Thanks for contributing to REPOSITORY_NAME.
      We will be looking through your pull request as soon as possible.
  
  broken_links:
  
    name: "Check for broken links in files"
    events: [ pull_request ]
    close: true
    message: >
      @{{ user.login }}, the following links in the diff did not return an HTTP
      status code of `200`. Please reply with the text `/fixed` once the links
      have been fixed in order to reopen this. The links are:
      {{ diff_links.broken }}
    when:
      - action = "opened" or action = "reopened"
      - count(diff_links.broken) > 1
  
  single_broken_links:
  
    name: "Check for broken links in files (Single)"
    events: [ pull_request ]
    close: true
    message: >
      @{{ user.login }}, one of the links in the diff did not return an HTTP
      status code of 200. Please check for broken links. The broken link we
      found is `{{ diff_links.broken.0 }}`. Please add a comment with the text
      `/fixed` once this link have been fixed in order to reopen this.
    when:
      - action = "opened" or action = "reopened"
      - count(diff_links.broken) = 1

  short_description:
  
    name: "Close issues with short descriptions"
    events: [ issues, pull_request ]
    when:
      - length(body) < 50
      - action = "opened" or action = "reopened"
    close: true
    label: invalid
    message: >
      @{{ user.login }}, the issue description is too short. Please add a comment
      with the text `/fixed` once you have amended the description to contain
      more than the requirement of 50 characters.
  
  missing_version_number:
  
    name: "Close bugs with missing version number"
    events: issues
    close: true
    label: invalid
    message: >
      @{{ user.login }}, please add a comment with the text `/fixed` once
      you have added the version you are using per our contributing guidelines.
    when:
      - action = "labelled"
      - filter(labels, "name") has "bug"
      - not(body matches "/[0-9]{1,2}\.[0-9]+(\.[0-9]+)?/")
    
  require_tests:
  
    name: "Require unit tests for pull requests"
    events: pull_request
    message: >
      @{{ user.login }}, remember that all pull requests should be accompanied with
      unit tests per our contributing guidelines. Please `/cc` one of our
      maintainers if you need help with this!
    when:
      - action = "opened"
      - count(filter(files, "[name=/^src\/]")) > 1
      - count(filter(files, "[name=/^tests\/]")) = 0

  require_screenshots:

    name: "Require screenshot when there are style changes"
    events: [ pull_request ]
    message: >
      @{{ user.login }}, please include screenshot(s) when making style changes so
      we can review the new look and feel. Thanks!
    when:
      - action = "opened"
      - count(filter(files, "[name=/\.css$/]")) > 0
      - not(body matches "/!\[image\]\(.*?\)/")
